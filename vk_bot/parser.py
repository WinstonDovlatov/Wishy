def parse_user_info(d):
    if d is None:
        return "Анкета не заполнена\n"
    sex_str = "Пол: " + __get_sex(d)
    age_str = "Возраст: " + str(d.get('age', "Неизвестен"))
    interests_str = "Анкета по интересам: " + __get_interests(d)
    extra_inerests_str = "Дополнительные интересы, указанные пользователем: " + __get_extra_interests(d)
    present_type_sr = 'Анкета по типам подарка. ' + __get_presents_types(d)
    no_presents_str = "Подарки, которые не хотел бы получить: " + __get_no_pres(d)
    user_description = ' \n'.join(
        [sex_str, age_str, interests_str, extra_inerests_str, present_type_sr, no_presents_str])
    return user_description


def __get_sex(d):
    sex = d.get('sex', 0)
    if sex == 1:
        return 'Женщина'
    if sex == 2:
        return 'Мужчина'
    else:
        return "Неизвестен"


def __get_interests(d):
    interests = d.get('interests', None)
    if interests is None:
        return "Не заполнена"
    try:
        return '  '.join([f"{x['label']}: {'не' if not x['checked'] else ''} нравится." for x in interests])
    except:
        return "Не заполнена"


def __get_extra_interests(d):
    arr = d.get('extraInterests', None)
    if (arr is None) or (len(arr) == 0) or ((len(arr) == 1) and (arr[0] is None)):
        return "Не указаны."
    try:
        if type(arr[-1]) != dict:
            arr[-1] = {'label': arr[-1]}
        return ', '.join([x['label'] for x in arr])
    except:
        return "Не указаны."


def __get_presents_types(d):
    v = d.get('presents', None)
    if v is None:
        return "Не заполнена"
    try:
        return '  '.join([f"{x['label']}: {'не ' if not x['checked'] else ''}хотел бы получить." for x in v])
    except:
        return "Не заполнена"


def __get_no_pres(d):
    arr = d.get('noPresents', None)
    if (arr is None) or (len(arr) == 0) or ((len(arr) == 1) and (arr[0] is None)):
        return "Не указаны."
    try:
        if type(arr[-1]) != dict:
            arr[-1] = {'label': arr[-1]}
        return ', '.join([x['label'] for x in arr])
    except: "Не указаны."



def generate_prompt(description):
    prompt = f"""
Ты — проницательный ассистент, который через диалог выявляет глубинные предпочтения пользователя, чтобы предложить уникальные идеи для подарков. Твоя задача — задавать вопросы, которые раскрывают неочевидные связи между интересами, стилем жизни и личностью пользователя.
У тебя есть информация о пользователе из анкеты

{description}

    ### Инструкции:
    1. **Стратегия диалога**:
       - Задавай вопросы естественно, как дружеская беседа.
       - Заданий не более 7 вопросов
       - Анализируй ответы в реальном времени, чтобы:
         • Выявлять скрытые паттерны (например, любовь к ретро-играм → ностальгия по 90-м → тематические подарки)
         • Строить ассоциации (увлечение йогой → интерес к эко-товарам, минимализму)
         • Определять контекст (частые командировки → потребность в компактных практичных вещах)
       - при этом НЕ говори пользователю о своих выводах
       - НЕ говори пользователю о подарках
       - Избегай прямых вопросов о подарках! Примеры:
         ❌ «Что бы ты хотел получить в подарок?»
       - постарайся исследовать как можно больше областей / интересов пользователя, у тебя будет всего 7 вопросов, чтобы узнать информацию о пользователе
       - не задавай более 2 вопросов по одной теме, не углубляйся сильно. Тебе нужно исследовать пользователя с разных сторон
""" + """
    2. **Генерация идей**:
       - На основе ответов делай умозаключения. Пример:
         Пользователь: «Обожаю устраивать киновечера» →
         Выводы: «ценит уют, коллекционирует впечатления, возможно, любит винтажные стили» →
         Идеи: «проектор для домашнего кинотеатра», «набор тематических попкорн-боксов»
       - умнозаключения не говори, а просто держи в голове
    3. **Завершение диалога**:
       - После 5-7 вопросов заверши беседу естественной фразой («Было здорово поболтать!»). Не упоминай в прощании подарки
       - Сгенерируй JSON-отчет:
         ||JSON_START||
         {
           "hidden_insights": {
             "personality_traits": ["ностальгичность", "прагматизм"],
             "style_dna": "минимализм + винтажные акценты",
             "unspoken_needs": ["организация пространства", "эмоциональный комфорт"]
           },
           "creative_gifts": [
             "Винтажный декор для дома в стиле 90-х",
             "Набор эко-канцелярии для рабочего стола"
           ]
         }
         ||JSON_END||
       - Напиши от 20 до 30 подарков. Они должны быть привязаны к разным сторонам личности. Подарки могут быть неожиданными. Прояви фантазию и не стесняйся. Не фокусируйся на одной стороне личности или на одном интересе. Чем больше интересных подарков ты предложишь, тем лучше
       - Не забывай о очевидных подарках
       - Часть подарков должны не очевидно следовать из анкеты(которая в самом начале), а должны быть неожиданными. Ты должен придумать неочевидные подарки основываясь на диалоге или на анкете. Постарайся мыслить шире
"""
    return prompt
